{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"This site is still under construction But I still like to show ongoing progress and always welcome feedback! Stephen Tran I'm a technology-focused engineer with 11+ years of experience designing and developing software process solutions for an enterprise environment. I have fulfilled leadership roles as a Project Engineer, Process Engineering, Manufacturing Engineering, and Software / Automation Engineer. LinkedIn Email Me Example Projects MS Excel - Custom Tools and Automation Excel Automation Page CAD and 3D Printing Chimney Scope Charlie Product Design and Prototype Fabrication of custom chimney scope camera for commercial sale. Official site.","title":"Home"},{"location":"#this-site-is-still-under-construction","text":"But I still like to show ongoing progress and always welcome feedback!","title":"This site is still under construction"},{"location":"#stephen-tran","text":"I'm a technology-focused engineer with 11+ years of experience designing and developing software process solutions for an enterprise environment. I have fulfilled leadership roles as a Project Engineer, Process Engineering, Manufacturing Engineering, and Software / Automation Engineer. LinkedIn Email Me","title":"Stephen Tran"},{"location":"#example-projects","text":"","title":"Example Projects"},{"location":"#ms-excel-custom-tools-and-automation","text":"Excel Automation Page","title":"MS Excel - Custom Tools and Automation"},{"location":"#cad-and-3d-printing","text":"","title":"CAD and 3D Printing"},{"location":"#chimney-scope-charlie","text":"Product Design and Prototype Fabrication of custom chimney scope camera for commercial sale. Official site.","title":"Chimney Scope Charlie"},{"location":"about/","text":"Professional Experience Carlisle IT - Software and Automation Engineering Supervisor Sept 2016 - Present Supervise team of engineers responsible for in-house development of custom automation equipment, custom software, and manufacturing tooling. Directly develop and maintain engineering software to automate technical product evaluation, document creation, and data management. Includes Quote and Order Confirmation processing and integration with ERP system (Baan and SAP). Developed with Aptean software platform, Java, and SQL databases. Develop custom software solutions to drive business process quality and efficiency. Experience in Desktop Apps, Internal Web Apps, IT scripting and automation. Software experience in Python, C#, advanced Macros / VBA, SQL Server, etc. Custom software integration with ERP systems Baan and SAP Sidecar data. Work with Process Engineering group to implement equipment into production line by driving the benchmarks of Functional Requirement Specification, Design Qualification, Operational Qualification, and Process Qualification.","title":"About"},{"location":"about/#professional-experience","text":"","title":"Professional Experience"},{"location":"about/#carlisle-it-software-and-automation-engineering-supervisor","text":"Sept 2016 - Present Supervise team of engineers responsible for in-house development of custom automation equipment, custom software, and manufacturing tooling. Directly develop and maintain engineering software to automate technical product evaluation, document creation, and data management. Includes Quote and Order Confirmation processing and integration with ERP system (Baan and SAP). Developed with Aptean software platform, Java, and SQL databases. Develop custom software solutions to drive business process quality and efficiency. Experience in Desktop Apps, Internal Web Apps, IT scripting and automation. Software experience in Python, C#, advanced Macros / VBA, SQL Server, etc. Custom software integration with ERP systems Baan and SAP Sidecar data. Work with Process Engineering group to implement equipment into production line by driving the benchmarks of Functional Requirement Specification, Design Qualification, Operational Qualification, and Process Qualification.","title":"Carlisle IT - Software and Automation Engineering Supervisor"},{"location":"desktop/","text":"Custom Desktop Applications Experience building desktop software applications to support business processes Platforms: C# with WPF and Winforms Python with PyQt5 Projects Under Construction","title":"Desktop Apps"},{"location":"desktop/#custom-desktop-applications","text":"Experience building desktop software applications to support business processes Platforms: C# with WPF and Winforms Python with PyQt5","title":"Custom Desktop Applications"},{"location":"desktop/#projects","text":"Under Construction","title":"Projects"},{"location":"excel/","text":"Excel, Macros, VBA - Fully Customizable Tools Microsoft Excel is one of the most universal software applications in the world. It is used by individuals in their homes while also being used by the largest companies in the world to support key business processes. If you are reading this, you likely have experience using Excel. You may have only ever used it to track a few personal finance items, or you may have built an entire career working in the application daily. You probably have it installed on your computer right now. If for no other reason, this makes building software and automation tools utilizing the highly flexible capabilities of Excel a great option. Jump to Project Examples Reasons to use Excel for your solution User-friendly - Even highly complex customized Excel tools have a familiarity for nearly all users. Cost Effective - The primary spreadsheet interface gives a great starting point for the data handling needs of most business processes. This can greatly speed up the time it takes to build a software solution compared to creating a user-interface from scratch. Also, you probably already have it installed. Schedule Effective - In addition to being faster to develop, the user-friendly nature will typically reduce the usual friction in training and transition of new processes for users. Deployment is also typically as easy as sharing an Excel file. Full-featured - VBA is a full programming language that can automate not only Excel, but most of your entire PC due to its' seamless interactions with Windows and (other Microsoft products). In contrast, many low-code solutions such as Power Automate, Power Apps, etc. may hit a low ceiling on their capabilities. Even solutions in other general purpose languages (python, java, etc.) may require additional effort to work well with Windows and your PC. Due to what i'll call its' \"quick and dirty\" qualities described above, it can be magnitudes quicker to create, test, and deploy a solution. A more hidden benefit of this is that you can quickly trial a process change, and if you don't like it, it is easier to let go and try something else. Other common options of comissioning a built-from-scratch application or purchasing a pricey new subscription can make the business over-invested in a solution. This means you may have used up significant time and resources before you realize the solution is not for you, and it can be hard to let go of the sunken effort. When you may not want to use Excel for your solution Especially complex data analysis may be better suited for specialized tools such as Python or R. Excel may be able to perform the task but may be much less effective or efficient. An extreme example would be Machine Learning. For complex data dashboards with extremely large amounts of data (ex. more than 1 million rows), Power BI or similar software may be better suited. If you need a web app or browser-based solution. Applications that run through your web browser may be better for certain goals. This cannot be achieved with Excel / VBA, although Excel Online is increasing in capability and can be a great solution in some cases. If you cannot tolerate any risk that users will deviate from the process. The flexibility of Excel means that users will always have a certain degree of freedom. There are ways to reduce risk, such as protecting aspects of the file, restricting access, etc. However, it will always have much more user flexibility than a built from scratch application. If you or your business does not currently use or have Excel. Project Examples Note: Projects shown are personal hobby projects for demonstration. I will not post any specific projects from customers or employers without express permission. Jump to... Simple Time Clock Log Business Action Log and Tracker Simple Time Clock Log Brief Description: Quick button press to start and stop timer to log time for applicable work. Stop button auto-jumps to field to typing description of work. Platform: Excel and VBA Compexity: Very simple Key Concepts: Button triggers, Basic process validation, data tracking Business Action Log and Tracker Brief Description: Allow teams to easily create, assign, track and manage actions for business operations or specific project Platform: Excel, VBA, SQL Compexity: Medium Key Concepts: External SQL database, Auto-email generation, event triggers, simultaneous multi-user Comments: Similar to other ticketing or request tracking systems available but without all the things you don't want or need. Simple, responsive, and extremely easy to deploy. Figure: Create new actions for an assignee, auto-email Figure: Manage actions, re-open actions Additional Feature Ideas: TBD Data Collection from Multiple Files and Reports Brief Description: TBD Platform: Excel, VBA Compexity: Medium Key Concepts: TBD Comments: TBD Additional Feature Ideas: TBD","title":"Excel - Automation"},{"location":"excel/#excel-macros-vba-fully-customizable-tools","text":"Microsoft Excel is one of the most universal software applications in the world. It is used by individuals in their homes while also being used by the largest companies in the world to support key business processes. If you are reading this, you likely have experience using Excel. You may have only ever used it to track a few personal finance items, or you may have built an entire career working in the application daily. You probably have it installed on your computer right now. If for no other reason, this makes building software and automation tools utilizing the highly flexible capabilities of Excel a great option. Jump to Project Examples","title":"Excel, Macros, VBA - Fully Customizable Tools"},{"location":"excel/#reasons-to-use-excel-for-your-solution","text":"User-friendly - Even highly complex customized Excel tools have a familiarity for nearly all users. Cost Effective - The primary spreadsheet interface gives a great starting point for the data handling needs of most business processes. This can greatly speed up the time it takes to build a software solution compared to creating a user-interface from scratch. Also, you probably already have it installed. Schedule Effective - In addition to being faster to develop, the user-friendly nature will typically reduce the usual friction in training and transition of new processes for users. Deployment is also typically as easy as sharing an Excel file. Full-featured - VBA is a full programming language that can automate not only Excel, but most of your entire PC due to its' seamless interactions with Windows and (other Microsoft products). In contrast, many low-code solutions such as Power Automate, Power Apps, etc. may hit a low ceiling on their capabilities. Even solutions in other general purpose languages (python, java, etc.) may require additional effort to work well with Windows and your PC. Due to what i'll call its' \"quick and dirty\" qualities described above, it can be magnitudes quicker to create, test, and deploy a solution. A more hidden benefit of this is that you can quickly trial a process change, and if you don't like it, it is easier to let go and try something else. Other common options of comissioning a built-from-scratch application or purchasing a pricey new subscription can make the business over-invested in a solution. This means you may have used up significant time and resources before you realize the solution is not for you, and it can be hard to let go of the sunken effort.","title":"Reasons to use Excel for your solution"},{"location":"excel/#when-you-may-not-want-to-use-excel-for-your-solution","text":"Especially complex data analysis may be better suited for specialized tools such as Python or R. Excel may be able to perform the task but may be much less effective or efficient. An extreme example would be Machine Learning. For complex data dashboards with extremely large amounts of data (ex. more than 1 million rows), Power BI or similar software may be better suited. If you need a web app or browser-based solution. Applications that run through your web browser may be better for certain goals. This cannot be achieved with Excel / VBA, although Excel Online is increasing in capability and can be a great solution in some cases. If you cannot tolerate any risk that users will deviate from the process. The flexibility of Excel means that users will always have a certain degree of freedom. There are ways to reduce risk, such as protecting aspects of the file, restricting access, etc. However, it will always have much more user flexibility than a built from scratch application. If you or your business does not currently use or have Excel.","title":"When you may not want to use Excel for your solution"},{"location":"excel/#project-examples","text":"Note: Projects shown are personal hobby projects for demonstration. I will not post any specific projects from customers or employers without express permission. Jump to... Simple Time Clock Log Business Action Log and Tracker","title":"Project Examples"},{"location":"excel/#simple-time-clock-log","text":"Brief Description: Quick button press to start and stop timer to log time for applicable work. Stop button auto-jumps to field to typing description of work. Platform: Excel and VBA Compexity: Very simple Key Concepts: Button triggers, Basic process validation, data tracking","title":"Simple Time Clock Log"},{"location":"excel/#business-action-log-and-tracker","text":"Brief Description: Allow teams to easily create, assign, track and manage actions for business operations or specific project Platform: Excel, VBA, SQL Compexity: Medium Key Concepts: External SQL database, Auto-email generation, event triggers, simultaneous multi-user Comments: Similar to other ticketing or request tracking systems available but without all the things you don't want or need. Simple, responsive, and extremely easy to deploy. Figure: Create new actions for an assignee, auto-email Figure: Manage actions, re-open actions Additional Feature Ideas: TBD","title":"Business Action Log and Tracker"},{"location":"excel/#data-collection-from-multiple-files-and-reports","text":"Brief Description: TBD Platform: Excel, VBA Compexity: Medium Key Concepts: TBD Comments: TBD Additional Feature Ideas: TBD","title":"Data Collection from Multiple Files and Reports"},{"location":"webapps/","text":"Custom Browser Based Apps Experience building internally hosted browser based applications to support business processes Platforms: Python with Flask Python with Plotly-Dash for data visualization Projects Under Construction","title":"Web Apps"},{"location":"webapps/#custom-browser-based-apps","text":"Experience building internally hosted browser based applications to support business processes Platforms: Python with Flask Python with Plotly-Dash for data visualization","title":"Custom Browser Based Apps"},{"location":"webapps/#projects","text":"Under Construction","title":"Projects"}]}